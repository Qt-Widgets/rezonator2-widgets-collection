#include "Values.h"
#include "Format.h"

namespace Z {

////////////////////////////////////////////////////////////////////////////////
//                                  Value
////////////////////////////////////////////////////////////////////////////////

QString Value::str() const
{
    return Z::str(_value) % _unit->name();
}

////////////////////////////////////////////////////////////////////////////////
//                               PrefixedValue
////////////////////////////////////////////////////////////////////////////////

PrefixedValue::PrefixedValue(double value, Unit unit) : _value(value), _unit(unit)
{
    _prefix = Z::Units::simplify(_value);
}

QString PrefixedValue::str() const
{
    return Z::str(_value) % Z::Units::prefixNameTr(_prefix) % _unit->name();
}

////////////////////////////////////////////////////////////////////////////////
//                                  ValueTS
////////////////////////////////////////////////////////////////////////////////

QString ValueTS::str() const
{
    return QString("[T: %1; S: %2]").arg(Z::str(T), Z::str(S));
}

////////////////////////////////////////////////////////////////////////////////
//                                DoublePoint
////////////////////////////////////////////////////////////////////////////////

QString DoublePoint::str() const
{
    return QString("[X: %1; Y: %2]").arg(Z::str(X), Z::str(Y));
}

} // namespace Z
