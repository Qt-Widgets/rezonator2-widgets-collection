diff --git a/libs/qcustomplot/qcustomplot.cpp b/libs/qcustomplot/qcustomplot.cpp
index 51722e2..2bc632a 100644
--- a/libs/qcustomplot/qcustomplot.cpp
+++ b/libs/qcustomplot/qcustomplot.cpp
@@ -6881,6 +6881,13 @@ void QCPAxisTickerPi::simplifyFraction(int &numerator, int &denominator) const
   denominator /= num;
 }
 
+namespace {
+inline QString formatIntegerPart(int integerPart)
+{
+    return QString::number(integerPart)+QLatin1String(" ");
+}
+}
+
 /*! \internal
   
   Takes the fraction given by \a numerator and \a denominator and returns a string representation.
@@ -6922,7 +6929,7 @@ QString QCPAxisTickerPi::fractionToString(int numerator, int denominator) const
       {
         return QString(QLatin1String("%1%2%3/%4"))
             .arg(sign == -1 ? QLatin1String("-") : QLatin1String(""))
-            .arg(integerPart > 0 ? QString::number(integerPart)+QLatin1String(" ") : QLatin1String(""))
+            .arg(integerPart > 0 ? formatIntegerPart(integerPart) : QLatin1String(""))
             .arg(remainder)
             .arg(denominator);
       } else if (mFractionStyle == fsUnicodeFractions)
@@ -17808,8 +17815,13 @@ void QCPAxisRect::layoutChanged()
 */
 void QCPAxisRect::mousePressEvent(QMouseEvent *event, const QVariant &details)
 {
+#ifdef Q_OS_MAC
+    auto button = Qt::LeftButton;
+#else
+    auto button = Qt::MiddleButton;
+#endif
   Q_UNUSED(details)
-  if (event->buttons() & Qt::LeftButton)
+  if (event->buttons() & button)
   {
     mDragging = true;
     // initialize antialiasing backup in case we start dragging:
@@ -17842,7 +17854,7 @@ void QCPAxisRect::mouseMoveEvent(QMouseEvent *event, const QPointF &startPos)
 {
   Q_UNUSED(startPos)
   // Mouse range dragging interaction:
-  if (mDragging && mParentPlot->interactions().testFlag(QCP::iRangeDrag))
+  if (mDragging && mParentPlot->interactions().testFlag(QCP::iRangeDrag) && !mParentPlot->skipDragging)
   {
     
     if (mRangeDrag.testFlag(Qt::Horizontal))
